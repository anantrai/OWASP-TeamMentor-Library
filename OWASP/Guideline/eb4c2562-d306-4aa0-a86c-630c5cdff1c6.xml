<?xml version="1.0" encoding="utf-8"?><guidanceItem id="eb4c2562-d306-4aa0-a86c-630c5cdff1c6" type="guideline" title="Restrict Authentication Cookies to HTTPS Connections" cssFile="guidance.css" Date="2010-09-20T17:09:45.15625Z" Author="" Category="Authentication" filePath="..\Libraries\OWASP\Guideline\eb4c2562-d306-4aa0-a86c-630c5cdff1c6.xml" Priority="2" Rule_Type="Implementation" Source="SI" Status="" Technology="ASP.NET 3.5" Topic="Security" Type="Guideline" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Do</H1><P>Use the <B>requireSSL</B> attribute to restrict authentication cookies to HTTPS connections only. </P><H1>Why</H1><P>Sending cookies out exclusively over SSL makes it much harder for an attacker to sniff the cookie values off the wire.&nbsp; If an attacker can get a copy of an authentication cookie, they can potentially emulate that user, compromising their account. </P><H1>When</H1><P>All systems which use authentication cookies should use SSL for those cookies if possible.&nbsp; Systems which deal with any personally identifiable information or monetary transaction should use SSL in all circumstances without exception. </P><H1>How</H1><P>Set the <B>secure</B> property of the authentication cookie to ensure that browsers only send authentication cookies over HTTPS connections.&nbsp; By using SSL, you prevent an attacker from capturing the authentication cookie to gain spoofed access to your application.&nbsp; Set the <B>secure</B> property by using <B>requireSSL="true"</B> on the <B>&lt;forms&gt;</B> element as shown here. </P><PRE>&lt;forms loginUrl="Secure\Login.aspx"<BR>        requireSSL="true" ... /&gt;</PRE><H1>Problem Example</H1><P>An online brokerage provides a large amount of reference content.&nbsp; As this content is not specific to any user and is publicly available, it is not protected by SSL for performance reasons like the trading interface is.&nbsp; However, the site is not configured to restrict authentication cookies to SSL only, so they're sent with all requests.&nbsp; An attacker positions themself on the same network segment as a user (someone using the public network in an internet cafe), sniffs the user's traffic, steals their cookie, and uses it to access their accounts.</P><H1>Solution Example</H1><P>An online brokerage provides a large amount of reference content.&nbsp; As this content is not specific to any user and is publicly available, it is not protected by SSL for performance reasons like the trading interface is.&nbsp; The site is&nbsp;correctly configured to restrict authentication cookies to SSL only, so they're only sent with requests protected by SSL.&nbsp; An attacker positions themself on the same network segment as a user (someone using the public network in an internet cafe) and sniffs the user's traffic, but because the cookies are only sent via SSL, they cannot retrieve them.</P><HR><P>Adapted from Microsoft patterns &amp; practices guidance. </P>
]]></content></guidanceItem>