<?xml version="1.0" encoding="utf-8"?><guidanceItem id="5b417ec2-f4d9-4571-82f1-813611cca26a" type="guideline" title="Protect Sensitive Data Over the Wire" cssFile="guidance.css" Date="2010-09-28T13:25:22.78125Z" Author="" Category="Sensitive Data" filePath="..\Libraries\OWASP\Guideline\5b417ec2-f4d9-4571-82f1-813611cca26a.xml" Priority="2" Rule_Type="Implementation" Source="SI" Status="" Technology="ASP.NET 3.5" Topic="Security" Type="Guideline" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Do</H1><P>Consider where items of sensitive data, such as credentials and application-specific data, are transmitted over a network link. Use a protocol that boasts adequate/strong encryption to protect said data. </P><H1>Why</H1><P>The internet is full of abstractions and layers. When data is sent over a wire, it typically passes through several intermediate relays on it's way towards&nbsp;some final destination. Using a safe protocol to transmit information is important because it adds protection against inadvertent eavesdropping and modification in mid transport. </P><H1>When</H1><P>This is appropriate whenever sensitive data needs to be sent between two hosts, whether it is using the public internet or a private LAN as a transmission medium. </P><H1>How</H1><P>If you need to send sensitive data between the Web server and browser, consider using SSL. If you need to protect server-to-server communication, such as between your Web server and database, consider IPSec or SSL.&nbsp;&nbsp;</P><H1>Related Items</H1><UL><LI><A href="ruledisplay:a11d8cb9-767c-4307-8a53-4d0f61cc12fa">Sensitive Data is Not Stored in Cookies, Hidden Form Fields, or Query Strings</A></LI></UL><HR><P>Adapted from Microsoft patterns &amp; practices guidance. </P>
]]></content></guidanceItem>