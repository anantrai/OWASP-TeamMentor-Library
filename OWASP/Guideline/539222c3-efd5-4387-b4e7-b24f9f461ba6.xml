<?xml version="1.0" encoding="utf-8"?><guidanceItem id="539222c3-efd5-4387-b4e7-b24f9f461ba6" type="guideline" title="Limit Session Lifetime" cssFile="guidance.css" Date="2011-01-20T03:18:13.671875Z" Author="" Category="Session Management" filePath="..\Libraries\OWASP\Guideline\539222c3-efd5-4387-b4e7-b24f9f461ba6.xml" Priority="J.D. Meier, Alex Mackman, Michael Dunner, Srinath Vasireddy, Ray Escamilla and Anandha Murukan" Rule_Type="Design" Source="OWASP" Status="" Technology=" Any" Topic="Security" Type="Guideline" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>Applies to</H1><UL><LI>Web Application</LI></UL><H1>What to Do</H1><P>Reduce the lifetime of sessions to mitigate the risk of session hijacking and replay attacks.</P><H1>Why</H1><P>Even when using SSL, there's still&nbsp;a risk of session hijacking and replay; there are lots of other out-of-band ways to steal session tokens.&nbsp; The shorter the session timeout, however, the less time an attacker has to capture a session cookie and use it to access your application.</P><H1>When</H1><P>All applications should consider the length of their sessions carefully, and any application protecting any sensitive information should make it as short as possible.</P><H1>How</H1><P>There are two pieces of information that need to be handled to limit the session lifetime.&nbsp; The first is the actual session cookie and the second is the server side session state.&nbsp; With most frameworks, each time the user takes an action on the site the timestamps on the session cookie&nbsp;and the corresponding field in the server-side session state&nbsp;are both reset to the current time.&nbsp; If someone attempts to use an expired cookie, the timestamp in the server-side session state for that session is checked and the request is disallowed.&nbsp; If the session is old enough that the server-side state has been deleted, it's denied immediately.&nbsp; In web farms, the timestamp may be embedded in the cookie and cryptographically signed, freeing up servers from the need to keep a single explicit session-state table.</P><P>Most web application frameworks will handle the details for you, so you'll only need to specify a simple timeout value.&nbsp; In some situations, you'll be able to choose whether the session timer should reset after each action (an idle timer, the default) or if it should be a single fixed timer from the initial login (an absolute timer).&nbsp; The latter is useful for fast transactions and especially security critical situations.</P><P>For most situations, thirty minutes is the maximum that an idle session should be accepted.&nbsp; For sites which handle sensitive information, ten minutes is more appropriate.&nbsp; If you want to allow a user to browse a site and let sessions sit for long periods of time and retain a customized experience, you can seperate out the cookies that control site customization from those that control access to more sensitive information or functionality; the customization cookies can be persisted while the actual session is expired.</P><H1>Problem Example</H1><P>A web site uses the default (one hour) session time set by their web application framework.&nbsp; When a user in an internet cafe forgets to log off, an attacker using the machine after them can browse to the site and use the old session to gain access to the victim's sensitive information.</P><H1>Solution Example</H1><P>A web site locks down its session timeouts to ten minutes, overriding the default set by their web application framework.&nbsp; When a user in an internet cafe forgets to log off, an attacker using the machine after them cannot browse to the site and use the old session to gain access to the victim's sensitive information, because the session has already expired.</P><H1>Additional Resources</H1><UL><LI>For more information see, "Chapter 4 - Design Guidelines for Secure Web Applications" at <A href="http://msdn2.microsoft.com/en-us/library/aa302420.aspx">http://msdn2.microsoft.com/en-us/library/aa302420.aspx</A>&nbsp;&nbsp; </LI></UL><HR><P>Adapted from Microsoft patterns &amp; practices guidance.</P>]]></content></guidanceItem>