<?xml version="1.0" encoding="utf-8"?><guidanceItem id="f527a834-7f1b-41dd-9383-d386de47b9da" type="checklist" title="Page ViewStateUserKey is used to Counter One-click Attacks" cssFile="guidance.css" Date="2010-10-03T16:02:47.515625Z" Author="" Category="Parameter Manipulation" filePath="..\Libraries\OWASP\Checklist Item\f527a834-7f1b-41dd-9383-d386de47b9da.xml" Priority="2" Rule_Type="Implementation" Source="SI" Status="" Technology="ASP.NET 3.5" Topic="Security" Type="Checklist Item" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Check For</H1><P>Check to ensure that all forms that require authentication or can be used to trigger important functionality are protected with ViewStateUserKey.</P><H1>Why</H1><P>A one-click attack consists of posting a malicious HTTP form to a known, vulnerable Web site. It is called "one-click" because it usually begins with an unaware victim clicking on an alluring link received through e-mail or found when navigating a crowded forum.&nbsp; By following the link, the user inadvertently triggers a remote process that ends up submitting the malicious form to a site.&nbsp; This allows an attacker to perform any action caused by the vulnerable form with the credentials of the victim.</P><P><STRONG>ViewStateUserKey</STRONG> makes it much harder for hackers to use the content of the client-side view state to prepare malicious posts against the site.&nbsp; Each time a form is invoked, a unique key is generated.&nbsp; The key contains encrypted time and session information, and the form submission is rejected if it is used in another session or after the session timeout has expired. </P><H1>How to Check</H1><P>Use the following steps to check whether ViewStateUserKey is used properly:</P><OL><LI><P><STRONG>Identify pages that should be protected. </STRONG>Review your application and make a list of all the forms that should be protected with ViewStateUserKey.&nbsp; Forms that meet either of the following criteria should be protected:</P><UL><LI>The form requires authentication <LI>The form triggers important application behavior or a write operation to a persistent store (eg. SQL database)</LI></UL><LI><P><STRONG>Check to see if the pages are protected. </STRONG>ViewStateUserKey can be set per page or in the <STRONG>OnInit</STRONG> virtual method of the page-derived class.&nbsp; </P><OL><LI>First check <STRONG>OnInit</STRONG>, if you find protection there, then all of your pages are covered.<BR><BR><PRE>protected override OnInit(EventArgs e) &#123;<BR>&nbsp;&nbsp; base.OnInit(e); <BR>&nbsp;&nbsp; ViewStateUserKey = Session.SessionID;<BR>&#125;</PRE><LI>Next check the individual pages, for instance:<BR><BR><PRE>void Page_Init (object sender, EventArgs e) &#123;<BR>&nbsp;&nbsp; ViewStateUserKey = Session.SessionID;<BR>&#125;</PRE></LI></OL><LI><P><STRONG>Ensure ViewStateUserKey is set properly. </STRONG>Setting <STRONG>ViewStateUserKey</STRONG> to a constant string&#8212;the same for all users&#8212;is like leaving it blank.&nbsp; It must be set to something that varies for each user&#8212;such as user ID or, better yet, session ID.&nbsp; For a number of technical and social reasons, session ID is a much better fit because a session ID is unpredictable, times out, and varies on a per-user basis. </P></LI></OL><H1>How to Fix</H1><P>The&nbsp;following code added to each&nbsp;of your pages will set the key based on SessionID.</P><PRE>void Page_Init (object sender, EventArgs e) &#123;<BR>   ViewStateUserKey = Session.SessionID;<BR>&#125;</PRE><P>Alternatively, you can add this code to the <B>OnInit</B> virtual method of the <B>Page</B>-derived class.&nbsp; (Note that you must set this property in the <B>Page.Init</B> event).&nbsp; This will allow you to write the code once rather than per page.</P><PRE>protected override OnInit(EventArgs e) &#123;<BR>   base.OnInit(e); <BR>   ViewStateUserKey = Session.SessionID;<BR>&#125;</PRE><H1>Related Items</H1><UL><LI><A href="ruledisplay:aa797ec2-627d-4b17-8c17-5a8405415344">Use Page ViewState User Key to Counter One-Click Attacks</A></LI></UL><HR><P>Adapted from Microsoft patterns &amp; practices guidance. </P>
]]></content></guidanceItem>