<?xml version="1.0" encoding="utf-8"?><guidanceItem id="57b928e2-5bc1-4d98-b3df-c7cca05dc5a8" type="checklist" title="All Data Passed Between Native and Java Code is Validated" cssFile="guidance.css" Date="2010-12-29T22:48:03.34375Z" Author="" Category="Unmanaged Code" filePath="..\Libraries\OWASP\Checklist Item\57b928e2-5bc1-4d98-b3df-c7cca05dc5a8.xml" Priority="2" Rule_Type="Implementation" Source="SI" Status="" Technology="Java" Topic="Security" Type="Checklist Item" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Check For</H1><P>Verify that your application validates all data that is passed between Java code and native code.</P><H1>Why</H1><P>Unchecked input and/or output can lead to buffer overflows, injection based attacks such as SQL injection, cross-site scripting, etc., that exploit weaknesses in the application.</P><H1>How to Check</H1><P>Due to the security risk posed by the use of native code, verify that your application validates data that is passed between native code and Java:</P><OL><LI><P><STRONG>Check if language boundaries are clearly defined. </STRONG>If your Java application needs to use native code, ensure that you have identified all the locations where the Java code interacts with native code. As your application moves between Java code and native code, special attention needs to be given to error handling routines, so that no security holes are introduced in your application by its native component.</P><LI><P><STRONG>Verify the quality of your application's validators. </STRONG>Using the <A href="ruledisplay:6D944640-22E7-421F-8192-45730D5118AB">Input is Validated for Length, Range, Format and Type</A> checklist, verify that your application's data is properly validated for length, range, format and type.</P><LI><P><STRONG>Verify that all data is validated. </STRONG>Using the <A href="ruledisplay:178EB28D-4F49-4476-AE8A-437F966DE577">Input from All Sources is Validated</A> checklist, verify that all data passing through the locations identified in Step 1 is validated.</P><LI><P><STRONG>Ensure that data validation code is centralized. </STRONG>It is better that all validation routines in your application are centralized for cleaner and better control. Shared validation routines are better than creating many spread throughout your application's code base. Every time your application accepts external data as input, it should first pass through this set of validation routines.</P></LI></OL><H1>Problem Example</H1><P>The following segment shows a JNI code that utilizes a COM object. Making the assumption that the Java code will handle data validation, the JNI segment does not verify that the passed input is a valid GUID. Since invalid GUIDs may cause unhandled exceptions, an attacker can force the application to disclose its call stack and possibly its source filenames.</P><BLOCKQUOTE><PRE>#include &lt;jni.h&gt;<BR>#include &lt;sys/types.h&gt;<BR>#include &lt;fcntl.h&gt;<BR>#include &lt;stdio.h&gt;<BR>#include &lt;atlbase.h&gt;<BR>#include &lt;windows.h&gt;<BR>#include &lt;wtypes.h&gt;<BR>JNIEXPORT jboolean<BR>JNICALL Java_Identifier_invokeObject<BR>       (JNIEnv &#42; env, jobject jobj, jstring jguid)<BR>&#123;<BR>      HRESULT result;<BR>      CLSID clsid;<BR>      IUnknown &#42;pIunkn;<BR>      LPWSTR guid;<BR>      jboolean iscopy;<BR>      jboolean ret = false;<BR>      char&#42; temp_guid = (&#42;env)-&gt;GetStringUTFChars(env, jguid, &amp;iscopy);<BR>      //The application fails to verify that the GUID is valid<BR>      guid = SysAllocStringLen(0, 38);<BR>      MultiByteToWideChar(CP_ACP, 0, temp_guid, -1, guid, 38);<BR>      result = GUIDFromString(guid, &amp;clsid);<BR>       ...<BR>      return ret;<BR>&#125;</PRE></BLOCKQUOTE><H1>Additional Resources</H1><UL><LI>For more information about the security issues that JNI introduces, see: <A href="http://www.owasp.org/index.php/Unsafe_JNI">Unsafe JNI</A> from OWASP. </LI></UL><H1>Related Guideline</H1><UL><LI><A href="ruledisplay:42F599F0-D1D6-4F25-9CC2-D5473F19113F">Guideline: Validate All Data Passed Between Native and Java Code (Java Web Application)</A> </LI></UL>
]]></content></guidanceItem>