<?xml version="1.0" encoding="utf-8"?><guidanceItem id="dea54698-3b7a-4a77-a623-68e5490df744" type="checklist" title="SSL is Used When Transmitting Credentials" cssFile="guidance.css" Date="2010-12-30T00:11:35.140625Z" Author="" Category="Authentication" filePath="..\Libraries\OWASP\Checklist Item\dea54698-3b7a-4a77-a623-68e5490df744.xml" Priority="2" Rule_Type="Implementation" Source="SI" Status="" Technology="Java" Topic="Security" Type="Checklist Item" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Check For</H1><P>Ensure that SSL&nbsp;is used when transmitting credentials and never unencrypted connections.</P><H1>Why</H1><P>Using SSL prevents the credentials from being&nbsp;identified or tampered with as they are transmitted over the network.</P><H1>How to Check</H1><OL><LI><P><STRONG>Verify that a dedicated SSL-enabled server is used for the authentication component of your application. </STRONG>Ensure that your application's authentication component runs on a dedicated subdomain and a server that accepts only HTTPS traffic. Disallowing unencrypted HTTP connections will prevent accidental or malicious unsecured connections. Check that the server uses valid SSLv3 certificates that have been signed by a trusted certification authority. Disallowing lower SSL versions, such as SSLv1 and SSLv2 will ensure that weaker encryption methods can not be exploited by an attacker.<BR><BR>The following URL should connect and prompt for login credentials:</P><BLOCKQUOTE><PRE>https://login.example.com/myapp/login</PRE></BLOCKQUOTE><P>An HTTP URL to the same server and component should either be disallowed or redirect to its HTTPS counterpart:</P><BLOCKQUOTE><PRE>http://login.example.com/myapp/login</PRE></BLOCKQUOTE><P>For more information, consult <A href="http://java.sun.com/j2ee/1.4/docs/tutorial-update2/doc/Security6.html#wp509934">Secure Socket Layer in the J2EE</A></P><LI><P><STRONG>Identify forms that send credentials. </STRONG>Forms are defined by a <STRONG>&lt;form&gt;</STRONG> tag in the HTML document, such as the one below:</P><BLOCKQUOTE><PRE>&lt;form method="POST" action="https://login.example.com/myapp/login"&gt;</PRE></BLOCKQUOTE><P>Forms that include credentials usually, but won't always, include an input field with a <STRONG>TYPE</STRONG> attribute set to <STRONG>password</STRONG>:</P><BLOCKQUOTE><PRE>&lt;input <STRONG>type</STRONG>="<STRONG>password</STRONG>" name="pass" size=25&gt;</PRE></BLOCKQUOTE><LI><P><STRONG>Ensure that form data is sent using HTTPS. </STRONG>Examine the <STRONG>ACTION</STRONG> attribute of the <STRONG>&lt;form&gt;</STRONG> tag and ensure it posts to an absolute URL path and includes HTTPS in the URL, as shown below: </P><BLOCKQUOTE><PRE>&lt;form method="POST" <STRONG>action</STRONG>="<STRONG>https</STRONG>://login.example.com/myapp/login"&gt;</PRE></BLOCKQUOTE></LI></OL><H1>Problem Example</H1><P>In the following snippet, the credentials are transmitted over unprotected HTTP. This allows an attacker to easily sniff the traffic and steal the credentials.</P><P><BLOCKQUOTE><PRE>&lt;html&gt;<BR>  &lt;head&gt;<BR>    &lt;title&gt;login form&lt;/title&gt;<BR>  &lt;/head&gt;<BR>  &lt;body&gt;<BR>    &lt;form method="POST" action="http://login.example.com/myapp/login"&gt;<BR>    &lt;input type="text" name="user" size=25&gt;&lt;br&gt;<BR>    &lt;input type="password" name="pass" size=25&gt;&lt;br&gt;<BR>    &lt;input type="submit" name="submit" value="log in"&gt;<BR>    &lt;/form&gt;<BR>  &lt;/body&gt;<BR>&lt;/html&gt;</PRE></BLOCKQUOTE><H1>Related Guideline</H1><UL><LI><A href="ruledisplay:ED6F49C0-E021-459E-AE4F-9116CA8E8073">Guideline: Use SSL When Transmitting Credentials (Java Web Application)</A> </LI></UL>
]]></content></guidanceItem>