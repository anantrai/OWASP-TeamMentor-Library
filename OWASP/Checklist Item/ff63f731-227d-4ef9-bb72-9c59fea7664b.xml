<?xml version="1.0" encoding="utf-8"?><guidanceItem id="ff63f731-227d-4ef9-bb72-9c59fea7664b" type="checklist" title="Role Manager is used for Roles Authorization Rather than Custom Code" cssFile="guidance.css" Date="2010-09-21T13:52:26.03125Z" Author="" Category="Authorization" filePath="..\Libraries\OWASP\Checklist Item\ff63f731-227d-4ef9-bb72-9c59fea7664b.xml" Priority="2" Rule_Type="Implementation" Source="SI" Status="" Technology="ASP.NET 3.5" Topic="Security" Type="Checklist Item" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Check For</H1><P>Ensure that&nbsp;the ASP.NET Role Manager is used for role-based authorization&nbsp;rather than&nbsp;custom code.</P><H1>Why</H1><P>ASP.NET provides a role manager feature that automatically creates, manages and looks up roles for the authenticated user. Role managers reduce the possibilities&nbsp;of serious security issues from programmer errors&nbsp;as well as&nbsp;reduce the amount of custom code needed for an application. </P><H1>How to Check</H1><P>Use the following steps to check if your application is using the Role Manager:</P><OL><LI>Check for the existence of the &lt;<STRONG>roleManager</STRONG>&gt; element beneath the &lt;<B>system.web</B>&gt; section of your application's Web.config file and make sure the <B>enabled</B> attribute is set to <B>true.</B> <LI>Ensure there is a connection string in the &lt;<STRONG>connectionStrings</STRONG>&gt; section that points to your roles store. <LI>Ensure there is a specific provider configured in the &lt;<B>roleManager</B>&gt;<B> </B>element. <LI>Check that the <B>defaultProvider</B> attribute on the &lt;<B>roleManager</B>&gt; element points to your chosen role provider. <LI>Check your application's code and ensure it is using the Role Manager API (for example <B>Roles.IsUserInRole </B>and <STRONG>Roles.CreateRole</STRONG>) whenever a roles check takes place.</LI></OL><H1>How to Fix</H1><OL><LI>User authentication access checks <LI>Role access from the configured role store by the <STRONG>RoleManager</STRONG> HTTP module using the configured role provider <LI>URL and file authorization <LI>Programmatic role checks</LI></OL><P>This order means that role information cannot be used for an unauthenticated user. It also means that role access can be used for URL and file authorization.</P><P>To use the role manager feature in an ASP.NET application, you need to do the following: <OL><LI>Add a &lt;<B>roleManager</B>&gt; element beneath the &lt;<B>system.web</B>&gt; section of your application's Web.config file and enable role manager by setting its <B>enabled</B> attribute to <B>true</B>. <LI>Add a connection string to the &lt;<B>connectionStrings</B>&gt; section to point to your roles store. If you are using the <B>AuthorizationStoreRoleProvider</B>, this is an LDAP query string pointing to your Authorization Manager Policy store in Active Directory or ADAM. If you are using the <B>SqlRoleProvider</B>, this is a database connection string that points to your role store database. <LI>Configure the specific provider in the &lt;<B>roleManager</B>&gt;<B> </B>element in your application's Web.config file. The role manager system supports the following providers: <LI>If your application roles are in an Authorization Manager Policy store in Active Directory or ADAM, use the <B>AuthorizationStoreRoleProvider</B>. <LI>If your application roles are in a SQL Server database, use the <B>SqlRoleProvider.</B> <LI>If your application uses Windows groups as roles, use the <B>WindowsTokenRoleProvider</B>. Note that this is recommended to be used with Windows Authentication only. <LI>If your application roles are in a store other than those previously listed, create a custom roles provider inheriting <B>RoleProvider</B> base class. <LI>Set the <B>defaultProvider</B> attribute on the &lt;<B>roleManager</B>&gt; element to the chosen role provider. </LI></OL><P>To check roles and manage roles, use the Role Manager API (for example <B>Roles.IsUserInRole </B>and <B>Roles.CreateRole</B>). </P><H1>Related Items</H1><UL><LI><A href="ruledisplay:86e905f3-25a9-438c-bdc6-5b242584be2a">Use ASP.NET Role Manager for Roles Authorization</A></LI></UL><HR><P>Adapted from Microsoft patterns &amp; practices guidance. </P>
]]></content></guidanceItem>