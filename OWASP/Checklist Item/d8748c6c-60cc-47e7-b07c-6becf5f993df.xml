<?xml version="1.0" encoding="utf-8"?><guidanceItem id="d8748c6c-60cc-47e7-b07c-6becf5f993df" type="checklist" title="Inactive User Accounts are Automatically Locked" cssFile="guidance.css" Date="2010-12-29T23:36:32.109375Z" Author="" Category="Authorization" filePath="..\Libraries\OWASP\Checklist Item\d8748c6c-60cc-47e7-b07c-6becf5f993df.xml" Priority="2" Rule_Type="Design" Source="SI" Status="" Technology="Java" Topic="Security" Type="Checklist Item" xmlns="urn:microsoft:guidanceexplorer:guidanceItem"><content><![CDATA[<H1>What to Check For</H1><P>Ensure the application automatically locks inactive user accounts. Verify that all instances of locking inactive accounts are logged.</P><H1>Why</H1><P>Inactive user accounts increase the attack surface of the application and can be used by an attacker as a means of entry.</P><H1>How to Check</H1><P>Follow these steps during the design phase to make sure your application has the capability to lock its inactive user accounts:</P><OL><LI><P><STRONG>Verify your application stores the user's last login/inactivity information. </STRONG>Check if your application has the necessary procedures in place to store and retrieve last login and lockout information about its users. Common locations for storing such information are:</P><UL><LI>Database that stores user account information <LI>Data structures (e.g. Java class) that represent user accounts <LI>Routines that handle user login <LI>Routines that retrieve and update user account information</LI></UL><LI><P><STRONG>Verify your application has a lockout policy. </STRONG>An account lockout policy is typically application specific. Review your application's requirements and design specifications. Check for the following functionality:</P><UL><LI>A mechanism for determining user inactivity <LI>A mechanism for locking inactive accounts <LI>A mechanism for unlocking disabled accounts <LI>Verify that the last-login timestamp is reset to the current timestamp upon a successful authentication attempt</LI></UL><LI><P><STRONG>Verify the lockout policy is enforced by default. </STRONG>Make sure the functionality that enforces the lockout policy is enabled by default during deployment. </P><UL><LI>Ensure that only users with administrative privileges can amend your application's lockout policy. <LI>Verify that all instances of modifying the lockout policy are logged. <LI>Check the following locations in the code to determine if the lockout policy is fully enforced: <UL><LI>Account administration routines <LI>Background database processes that perform user account maintenance <LI>Authentication routines</LI></UL></LI></UL></LI></OL><H1>Problem Example</H1><P>The following segment illustrates the user database of a multi-user application. In its current state, the application logs the last time the user has logged in but does not enforce a lockout policy for its inactive users; therefore, an attacker can gain unauthorized access to the application by compromising an inactive account.</P><PRE>sql&gt; select username, locked, last_login_date from users;<BR>&#43;----------&#43;--------&#43;-----------------&#43;<BR>&#124; username &#124; locked &#124; last_login_date &#124;<BR>&#43;----------&#43;--------&#43;-----------------&#43;<BR>&#124; adam     &#124;      0 &#124;      2006-10-11 &#124;<BR>&#124; sue      &#124;      0 &#124;      2006-10-11 &#124;<BR>&#124; jim      &#124;      0 &#124;      2006-10-01 &#124;<BR>&#124; richard  &#124;      0 &#124;      2006-10-01 &#124;<BR>&#124; julie    &#124;      0 &#124;      2006-09-23 &#124;<BR>&#124; sam      &#124;      0 &#124;      2006-06-23 &#124;<BR>&#43;----------&#43;--------&#43;-----------------&#43;</PRE><H1>Related Guideline</H1><UL><LI><A href="ruledisplay:45CAB29F-B502-4524-B054-D507AD601748">Guideline: Automatically Lock Inactive User Accounts (Java Web Application)</A> </LI></UL>
]]></content></guidanceItem>